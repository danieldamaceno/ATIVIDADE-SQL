create database comercial
use comercial
create table cliente 
(
cod_cliente int not null primary key,
nome_cliente varchar (20) not null,
endereço varchar (60) not null,
cidade varchar(20) not null,
cep varchar(8), 
UF varchar(2) not null,
cnpj varchar(16) not null,
IE varchar (4) 
)
create table vendedor 
(
 cd_vendedor int not null primary key,
 nome_vendedor varchar(20) not null,
 salario numeric(9,2) not null,
 comissao char (1) not null
)
create table produto 
(
cd_produto int not null primary key,
Unidade varchar(3) not null,
descricao varchar(20) not null, 
vl_unitario numeric (7,2) not null
)
create table Item_pedido 
(
num_pedido int not null,
cd_produto int not null,
quantidade smallint not null,
primary key (num_pedido,cd_produto),
foreign key (cd_produto) references produto(cd_produto)
)
create table pedido 
(
num_pedido int not null primary key,
prazo_entrega smallint not null,
cd_cliente int not null,
cd_vendedor int not null,
foreign key(num_pedido) references item_pedido(num_pedido),
foreign key (cd_cliente) references cliente(cod_cliente),
foreign key (cd_vendedor) references vendedor(cd_vendedor)
)
Acrescente os dados, conforme descrito abaixo, às tabelas criadas no banco de dados (INSERT INTO (<campos>) VALUES (<valores>)).
insert into cliente 
values 
(720,'Ana','Rua 17 n.19', 'Niterói','24358310','RJ','12113231/0001-34','2134'),
(870,'Flávio','Av. Pres. Vargas 10', 'São Paulo','22763931','SP','22534126/9387-9','4631'),
(110,'Jorge','Rua Caiapo 13', 'Curitiba','30078500','PR','14512764/9834-9',NULL),
(222,'Lúcia','Rua Itabira 123 Loja 9', 'Belo Horizonte','22124391','MG','28315213/9348-8','2985'),
(830,'Maurício','Av. Paulista 1236 sl 2345', 'São Paulo','3012683','SP','32816985/7465-6','9343'),
(130,'Edmar','Rua da Praia sn', 'Salvador','30079300','BA','23463284/234-9','7121'),
(410,'Rodolfo','Largo da Lapa 27 sobrado', 'Rio de Janeiro','30078900','RJ','12835128/2346-9','7431'),
(20,'Beth','Av. Climério 45', 'São Paulo','25679300','SP','32485126/7326-8','9280'),
(157,'Paulo','Tv. Moraes c/3', 'Londrina',NULL,'PR','32848223/324-2','1923'),
(180,'Lívio','Av. Beira Mar n. 1256', 'Florianópolis','30077500','SC','12736571/2347-4',NULL),
(260,'Susana','Rua Lopes Mendes 12', 'Niterói','30046500','RJ','21763571/232-9','2530'),
(290,'Renato','Rua Meireles 123 bl.2 sl. 345', 'São Paulo','30225900','SP','13276571/1231-4','1820'),
(390,'Sebastião','Rua da Igreja 10', 'Uberaba','30438700','MG','32176547/213-3','9071'),
(234,'José','Quadra 3 bl. 3 sl. 1003', 'Brasília','22841650','DF','21763576/1232-3','2931');

INSERT INTO vendedor
VALUES
(209,'José',1800,'C'),
(111,'Carlos',2490,'A'),
(11,'João',2780,'C'),
(240,'Antônio',9500,'C'),
(720,'Felipe',4600,'A'),
(213,'Jonas',2300,'A'),
(101,'João',2650,'C'),
(310,'Josias',870,'B'),
(250,'Maurício',2930,'B')

INSERT INTO produto
VALUES
(25,'Kg','Queijo',0.97),
(31,'BAR','Chocolate',0.87),
(78,'L','Vinho',2),
(22,'M','Linho',0.11),
(30,'SAC','Açúcar',0.3),
(53,'M','Linha',1.8),
(13,'G','Ouro',6.18),
(45,'M','Madeira',0.25),
(87,'M','Cano',1.97),
(77,'M','Papel',1.05)

INSERT INTO item_pedido
VALUES
(121, 25, 10),
(121, 31, 35),
(97, 77, 20),
(101, 31, 9),
(101, 78, 18),
(101, 13, 5),
(98, 77, 5),
(148, 45, 8),
(148, 31, 7),
(148, 77, 3),
(148, 25, 10),
(148, 78, 30),
(104, 53, 32),
(203, 31, 6),
(189, 78, 45),
(143, 31, 20),
(143, 78, 10),
(105, 78, 10),
(111, 25, 10),
(111, 78, 70),
(103, 53, 18),
(91, 77, 40),
(138, 22, 10),
(138, 77, 35),
(138, 53, 18),
(108, 13, 17),
(119, 77, 40),
(119, 13, 6),
(119, 22, 10),
(119, 53, 43),
(137, 13, 8)

INSERT INTO pedido
VALUES
(121, 20, 410, 209),
(97, 20, 720, 101),
(101, 15, 720, 101),
(137, 20, 720, 720),
(148, 20, 720, 101),
(189, 15, 870, 213),
(104, 30, 110, 101),
(203, 30, 830, 250),
(98, 20, 410, 209),
(143, 30, 20, 111),
(105, 15, 180, 240),
(111, 20, 260, 240),
(103, 20, 260, 11),
(91, 20, 260, 11),
(138, 20, 260, 11),
(108, 15, 290, 310),
(119, 30, 390, 250)


1)	LISTAR TODOS OS PRODUTOS COM AS RESPECTIVAS DESCRIÇÕES, UNIDADES E VALORES UNITÁRIOS, OBTENDO O SEGUINTE RESULTADO (SELECT SIMPLES SEM WHERE COM ESPECIFICAÇÃO DE TODOS OS CAMPOS):

SELECT DESCRICAO, UNIDADE, VL_UNITARIO FROM PRODUTO


2)	LISTAR DA TABELA CLIENTE O CNPJ, O NOME DO CLIENTE E SEU ENDEREÇO, OBTENDO O SEGUINTE RESULTADO (IDEM COM ESPECIFICAÇÃO DE PARTE DOS CAMPOS):

SELECT CNPJ, NOME_CLIENTE, ENDEREÇO FROM CLIENTE


3)	LISTAR TODO O CONTEÚDO DE VENDEDOR, OBTENDO O SEGUINTE RESULTADO (SELECT SEM A ESPECIFICAÇÃO DE CAMPOS – CORINGA *):

SELECT * FROM VENDEDOR


4)	PROBLEMA: LISTAR O NÚMERO DO PEDIDO, O CÓDIGO DO PRODUTO E A QUANTIDADE DOS ITENS DO PEDIDO COM A QUANTIDADE IGUAL A 35 DA TABELA ITEM DE PEDIDO, OBTENDO O SEGUINTE RESULTADO (SELECT COM WHERE):

SELECT * FROM ITEM_PEDIDO WHERE QUANTIDADE = 35


5)	QUAIS SÃO OS CLIENTES QUE MORAM EM NITERÓI?

SELECT NOME_CLIENTE FROM CLIENTE WHERE CIDADE = 'Niterói'


6)	LISTAR OS PRODUTOS QUE TENHAM UNIDADE IGUAL A ‘M’ E VALOR UNITÁRIO IGUAL A R$ 1,05 DA TABELA PRODUTO, OBTENDO O SEGUINTE RESULTADO (OPERADORES LÓGICOS):

SELECT DESCRICAO FROM PRODUTO WHERE UNIDADE = 'M' AND VL_UNITARIO = 1.05


7)LISTAR O CÓDIGO E A DESCRIÇÃO DOS PRODUTOS QUE TENHAM O VALOR UNITÁRIO NA FAIXA DE R$ 0,32 ATÉ R$ 2,00, OBTENDO O SEGUINTE RESULTADO (OPERADOR BETWEEN):

SELECT CD_PRODUTO, DESCRICAO FROM PRODUTO WHERE VL_UNITARIO BETWEEN 0.32 AND 2.00


8)	LISTAR TODOS OS PRODUTOS QUE TENHAM O SEU NOME COMEÇANDO POR Q, OBTENDO O SEGUINTE RESULTADO (OPERADOR LIKE, COM OS CORINGAS _ - UM CARACTERE - E % - VÁRIOS CARACTERES):

SELECT CD_PRODUTO, DESCRICAO FROM PRODUTO WHERE DESCRICAO LIKE 'Q%'


9)	LISTAR OS VENDEDORES QUE NÃO COMEÇAM POR ‘JO’, , OBTENDO O SEGUINTE RESULTADO (OPERADOR LIKE, COM OS CORINGAS _ - UM CARACTERE - E % - VÁRIOS CARACTERES):

SELECT CD_VENDEDOR, NOME_VENDEDOR FROM VENDEDOR WHERE NOME_VENDEDOR NOT LIKE 'Jo%'


10)	LISTAR OS VENDEDORES QUE SÃO DA FAIXA DE COMISSÃO A E B, OBTENDO O SEGUINTE RESULTADO (OPERADORES IN E UM CONJUNTO DE VALORES):

SELECT NOME_VENDEDOR FROM VENDEDOR WHERE COMISSAO IN ('A', 'B')


11)	MOSTRAR OS CLIENTES QUE NÃO TENHAM INSCRIÇÃO ESTADUAL, OBTENDO O SEGUINTE RESULTADO (IS NULL):

SELECT * FROM CLIENTE WHERE IE IS NULL


12)	MOSTRAR EM ORDEM ALFABÉTICA A LISTA DE VENDEDORES E SEUS RESPECTIVOS SALÁRIOS FIXOS, OBTENDO O SEGUINTE RESULTADO (ORDER BY [ASC/DESC]):

SELECT NOME_VENDEDOR, SALARIO FROM VENDEDOR ORDER BY NOME_VENDEDOR ASC


13)	LISTAR OS NOMES, CIDADES E ESTADOS DE TODOS OS CLIENTES, ORDENADOS POR ESTADO E CIDADE DE FORMA DESCENDENTE, OBTENDO O SEGUINTE RESULTADO (OPERADOR ORDER BY COM MAIS DE UM CAMPO ESPECIFICADO):

SELECT NOME_CLIENTE, CIDADE, UF FROM CLIENTE ORDER BY UF DESC, CIDADE DESC


14)	MOSTRAR A DESCRIÇÃO E O VALOR UNITÁRIO DE TODOS OS PRODUTOS QUE TENHAM A UNIDADE ‘KG’, EM ORDEM DE VALOR UNITÁRIO ASCENDENTE, OBTENDO O SEGUINTE RESULTADO (ORDER BY):

SELECT DESCRICAO, VL_UNITARIO FROM PRODUTO WHERE UNIDADE = 'KG' ORDER BY VL_UNITARIO ASC


15)	MOSTRAR O NOVO SALÁRIO FIXO DOS VENDEDORES, DE FAIXA DE COMISSÃO ‘C’, CALCULADO COM BASE NO REAJUSTE DE 75% ACRESCIDO DE R$ 120,00 DE BONIFICAÇÃO. ORDENAR PELO NOME DO VENDEDOR, OBTENDO O SEGUINTE RESULTADO (COLUNA CALCULDA):

SELECT NOME_VENDEDOR, SALARIO+(75/100*SALARIO)+120 AS 'Novo Salário' FROM VENDEDOR
WHERE COMISSAO = 'C' ORDER BY NOME_VENDEDOR ASC


16)	MOSTRAR O MENOR E O MAIOR SALÁRIOS DA TABELA VENDEDORES, OBTENDO O SEGUINTE RESULTADO (FUNÇÕES MAX() E MIN()):

SELECT MIN(SALARIO), MAX(SALARIO) FROM VENDEDOR


17)	MOSTRAR A QUANTIDADE TOTAL PEDIDA PARA O PRODUTO ‘VINHO’ DE CÓDIGO ‘78’ NA TABELA ITEM DE PEDIDO, OBTENDO O SEGUINTE RESULTADO (FUNÇÃO SUM() COM CLÁUSULA WHERE):

SELECT SUM(QUANTIDADE) FROM ITEM_PEDIDO WHERE CD_PRODUTO = 78


18)	QUAL A MÉDIA DOS SALÁRIOS FIXOS DOS VENDEDORES (FUNÇÃO AVG())?

SELECT AVG(SALARIO) FROM VENDEDOR


19)	QUANTOS VENDEDORES GANHAM ACIMA DE R$ 2.500,00 DE SALÁRIO FIXO (FUNÇÃO COUNT() COM CLÁUSULA WHERE)?

SELECT COUNT(*) FROM VENDEDOR WHERE SALARIO > 2500


20)	QUAIS SÃO AS UNIDADES DE PRODUTOS, DIFERENTES, NA TABELA PRODUTO (CLÁUSULA DISTINCT)?

SELECT DISTINCT UNIDADE FROM PRODUTO


21)	LISTAR A QUANTIDADE DE PRODUTOS QUE CADA PEDIDO CONTÉM.

SELECT NUM_PEDIDO, SUM(QUANTIDADE) FROM ITEM_PEDIDO GROUP BY NUM_PEDIDO


22 LISTAR OS PEDIDOS QUE TEM MAIS DE TRÊS PRODUTOS.

SELECT NUM_PEDIDO, COUNT(NUM_PEDIDO) AS 'Total de pedidos' FROM ITEM_PEDIDO
GROUP BY NUM_PEDIDO 
HAVING COUNT(NUM_PEDIDO) > 3


23)	VER OS PEDIDOS DE CADA CLIENTE, LISTANDO NOME DO CLIENTE E NÚMERO DO PEDIDO (INNER JOIN).

SELECT C.NOME_CLIENTE, NUM_PEDIDO FROM CLIENTE C
INNER JOIN PEDIDO P ON C.COD_CLIENTE = P.CD_CLIENTE


24 LISTAR A JUNÇÃO DE CLIENTES COM PEDIDOS (CROSS JOIN).

SELECT * FROM CLIENTE 
CROSS JOIN PEDIDO  


25)	LISTAR TODOS OS CLIENTES COM SEUS RESPECTIVOS PEDIDOS. OS CLIENTES QUE NÃO TÊM PEDIDOS TAMBÉM DEVEM SER APRESENTADOS (OUTER JOIN).

SELECT * FROM CLIENTE C
LEFT OUTER JOIN PEDIDO P ON C.COD_CLIENTE = P.CD_CLIENTE


26)	CLIENTES COM PRAZO DE ENTREGA SUPERIOR A 15 DIAS E QUE PERTENÇAM AOS ESTADOS DE SÃO PAULO OU RIO DE JANEIRO (INNER JOIN COM WHERE).

SELECT C.* FROM CLIENTE C
INNER JOIN PEDIDO P ON C.COD_CLIENTE = P.CD_CLIENTE
WHERE P.PRAZO_ENTREGA > 15 AND C.UF IN ('SP','RJ')


27)	MOSTRAR OS CLIENTES E SEUS RESPECTIVOS PRAZOS DE ENTREGA, ORDENANDO DO MAIOR PARA O MENOR.

SELECT C.*, P.PRAZO_ENTREGA FROM CLIENTE C
INNER JOIN PEDIDO P ON C.COD_CLIENTE = P.CD_CLIENTE
ORDER BY P.PRAZO_ENTREGA ASC


28)MODIFIQUE O EXEMPLO ACIMA PARA APRESENTAR APENAS PRAZOS DE ENTREGA DIFERENTES PARA CADA CLIENTE.

SELECT DISTINCT C.*, P.PRAZO_ENTREGA FROM CLIENTE C
INNER JOIN PEDIDO P ON C.COD_CLIENTE = P.CD_CLIENTE
ORDER BY P.PRAZO_ENTREGA ASC


29)	APRESENTAR OS VENDEDORES, EM ORDEM ALFABÉTICA, QUE EMITIRAM PEDIDOS COM PRAZOS DE ENTREGA SUPERIORES A 15 DIAS E QUE TENHAM SALÁRIOS FIXOS IGUAIS OU SUPERIORES A R$ 1.000,00.

SELECT V.* FROM VENDEDOR V
INNER JOIN PEDIDO P ON V.CD_VENDEDOR = P.CD_VENDEDOR
WHERE P.PRAZO_ENTREGA > 15 AND V.SALARIO >= 1000
ORDER BY V.NOME_VENDEDOR ASC


30)	MOSTRE OS CLIENTES, EM ORDEM ALFABÉTICA, QUE TÊM PRAZO DE ENTREGA MAIOR QUE 15 DIAS PARA O PRODUTO QUEIJO E QUE SEJAM DO RIO DE JANEIRO.

SELECT C.*, PE.PRAZO_ENTREGA, IP.CD_PRODUTO FROM CLIENTE C
INNER JOIN PEDIDO PE ON C.COD_CLIENTE = PE.CD_CLIENTE
INNER JOIN ITEM_PEDIDO IP ON PE.NUM_PEDIDO = IP.NUM_PEDIDO
INNER JOIN PRODUTO PR ON IP.CD_PRODUTO = PR.CD_PRODUTO
WHERE PE.PRAZO_ENTREGA > 15 AND C.UF = 'RJ' AND DESCRICAO = 'Queijo'
ORDER BY C.NOME_CLIENTE ASC


31)	MOSTRE TODOS OS VENDEDORES QUE VENDERAM CHOCOLATE EM QUANTIDADE SUPERIOR A DEZ QUILOS.

SELECT V.* FROM VENDEDOR V
INNER JOIN PEDIDO PE ON V.CD_VENDEDOR = PE.CD_VENDEDOR
INNER JOIN ITEM_PEDIDO IP ON PE.NUM_PEDIDO = IP.NUM_PEDIDO
INNER JOIN PRODUTO PR ON IP.CD_PRODUTO = PR.CD_PRODUTO
WHERE QUANTIDADE > 10 AND UNIDADE = 'KG' AND DESCRICAO = 'Chocolate'


32 QUANTOS CLIENTES FIZERAM PEDIDOS COM O VENDEDOR JOÃO?

SELECT COUNT(C.NOME_CLIENTE) FROM CLIENTE C 
INNER JOIN PEDIDO PE ON C.COD_CLIENTE = PE.CD_CLIENTE
INNER JOIN VENDEDOR V ON PE.CD_VENDEDOR = V.CD_VENDEDOR
WHERE V.NOME_VENDEDOR = 'João'



33)	QUAIS OS CLIENTES DA CIDADE RIO DE JANEIRO E NITERÓI QUE TIVERAM SEUS PEDIDOS TIRADOS PELO VENDEDOR JOÃO?

SELECT DISTINCT C.* FROM CLIENTE C 
INNER JOIN PEDIDO PE ON C.COD_CLIENTE = PE.CD_CLIENTE
INNER JOIN VENDEDOR V ON PE.CD_VENDEDOR = V.CD_VENDEDOR
WHERE CIDADE IN('Rio de Janeiro', 'Niterói') AND V.NOME_VENDEDOR = 'João'

34)	QUE PRODUTOS PARTICIPARAM DE QUALQUER PEDIDO CUJA QUANTIDADE SEJA 10?

SELECT DISTINCT PR.* FROM PRODUTO PR
INNER JOIN ITEM_PEDIDO IP ON PR.CD_PRODUTO = IP.CD_PRODUTO
WHERE QUANTIDADE = 10


35 QUAIS OS VENDEDORES GANHAM UM SALÁRIO FIXO ABAIXO DA MÉDIA?

SELECT * FROM VENDEDOR
HAVING SALARIO < (SELECT AVG(SALARIO) FROM VENDEDOR)


36 QUAIS OS PRODUTOS QUE NÃO ESTÃO PRESENTES EM NENHUM PEDIDO?

SELECT DISTINCT PR.* FROM PRODUTO PR
INNER JOIN ITEM_PEDIDO IP
WHERE PR.CD_PRODUTO NOT IN (SELECT CD_PRODUTO FROM ITEM_PEDIDO)


37)	QUAIS OS VENDEDORES QUE SÓ VENDERAM PRODUTOS POR GRAMA?

SELECT V.* FROM VENDEDOR V
INNER JOIN PEDIDO PE ON V.CD_VENDEDOR = PE.CD_VENDEDOR 
INNER JOIN ITEM_PEDIDO IP ON PE.NUM_PEDIDO = IP.NUM_PEDIDO
INNER JOIN PRODUTO PR ON IP.CD_PRODUTO = PR.CD_PRODUTO
WHERE UNIDADE = 'G'


38)	QUAIS OS CLIENTES QUE ESTÃO EM MAIS DE TRÊS PEDIDOS?

SELECT C.* FROM CLIENTE C
INNER JOIN PEDIDO PE ON C.COD_CLIENTE = PE.CD_CLIENTE
GROUP BY C.COD_CLIENTE
HAVING COUNT(PE.CD_CLIENTE) > 3

